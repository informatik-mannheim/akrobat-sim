<?xml version="1.0"?>
<robot>


<!-- Gazebo Plugin: implements the topics and parameters of the controllers. Plugin relies on spawn.launch - file -->
  <gazebo>
		<plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
			<robotNamespace>/hexapod</robotNamespace>
      <legacyModeNS>true</legacyModeNS>
		</plugin>
	

<!--GazeboRosP3D plugin broadcasts the inertial pose of any body in simulation via Odometry message as described in nav_msgs. produces a ROS topic message containing ground truth information of the referred body (position and velocity) on odometry topic. TF transform in gazebo.launch file transforms odom date to tf, so that robot movement in rviz will be shown with respect to world (not to base_link)-->

		<plugin name="ground_truth" filename="libgazebo_ros_p3d.so">
			<alwaysOn>true</alwaysOn>
			<updateRate>30.0</updateRate>
			<bodyName>hexapod_link</bodyName><!-- needs to be named after robot link name-->
      <topicName>odom</topicName> 
			<gaussianNoise>0.01</gaussianNoise>
      <frameName>world</frameName> 
			<xyzOffsets>0 0 0</xyzOffsets>
			<rpyOffsets>0 0 0</rpyOffsets>
    </plugin>
	
  </gazebo>

<!-- hokuyo laser plugin  -->
 <gazebo reference="hokuyo_link">
    <sensor name="head_hokuyo_sensor" type="ray" >
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-2.2689</min_angle> <!-- minimum value is -2.2689 default: -pi/2-->
            <max_angle>2.2689</max_angle>  <!-- minimum value is 2.2689 default: pi/2-->
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>10.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!--Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>/scan</topicName>
        <frameName>hokuyo_link</frameName>
      </plugin>
    </sensor>
  </gazebo>


</robot>
